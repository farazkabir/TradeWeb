@model TradeWeb.ViewModels.UserxViewModel

@{
    ViewBag.Title = "User";
}
<style>
    .cover{
        max-width:300px;
    }
    .cover img{
        max-width:100%;
        height:auto;
    }
</style>

<div class="container">
    <div class="row fullscreen align-items-center justify-content-center ">
        
        
        <div class="col-md-8">
            @using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <h2 class="text-center my-5 pt-5">
                    Set your profile
                </h2>
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "  control-label" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = " control-label" })
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address, new { @class = " control-label" })
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group my-5">
                    <div class="cover">

                    </div>
                    <div class="">
                        <label class="control-label w-100">Upload your profile picture</label>
                        <input type="file" class="" name="ImageFile" id="fileupload" required />
                    </div>
                </div>
                // @Html.TextBoxFor(m => m.ImageFile, new { type = "file" })


                @Html.HiddenFor(m => m.UserId, new { @Value = ViewBag.ID })
                //   <input id="Med" asp-for="MediaId" type="text" hidden />
              //  @Html.HiddenFor(m => m.Id)
                <div class="form-group">
                    <div class="">
                        <input type="submit" value="Submit" class="color1-btn" />
                    </div>
                </div>





            }

        </div>

    </div>

</div>
@section Scripts {
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        AOS.init({ duration: 600 });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        jQuery.validator.setDefaults({
            onfocusout: function (e) {
                this.element(e);
            },
            //onkeyup: false,
            highlight: function (element) {
                jQuery(element).closest('.form-control').addClass('is-invalid');
            },
            unhighlight: function (element) {
                jQuery(element).closest('.form-control').removeClass('is-invalid');
                jQuery(element).closest('.form-control').addClass('is-valid');
            },

            errorElement: 'div',
            errorClass: 'invalid-feedback',
            errorPlacement: function (error, element) {
                if (element.parent('.input-group-prepend').length) {
                    $(element).siblings(".invalid-feedback").append(error);
                    //error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            },
        });

    </script>
    <script>
        $(function () {
            // Multiple images preview in browser
            var imagesPreview = function (input, placeToInsertImagePreview) {

                if (input.files) {
                    var filesAmount = input.files.length;

                    for (i = 0; i < 1; i++) {
                        var reader = new FileReader();

                        reader.onload = function (event) {
                            $($.parseHTML('<img>')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                        }

                        reader.readAsDataURL(input.files[i]);
                    }
                }

            };

            $('#fileupload').on('change', function () {
                imagesPreview(this, 'div.cover');
            });
        });
    </script>


}



